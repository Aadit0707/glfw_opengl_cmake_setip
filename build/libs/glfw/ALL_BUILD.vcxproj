<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{CEB6FE9D-2555-343E-928E-C4E8403B5363}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/libs/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW" "-BC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build" --check-stamp-file "C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build/libs/glfw/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\cmake_uninstall.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\docs\Doxyfile.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfig.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfigVersion.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfw_config.h.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\Internal\CheckSourceCompiles.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/libs/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW" "-BC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build" --check-stamp-file "C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build/libs/glfw/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\cmake_uninstall.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\docs\Doxyfile.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfig.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfigVersion.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfw_config.h.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\Internal\CheckSourceCompiles.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/libs/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW" "-BC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build" --check-stamp-file "C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build/libs/glfw/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\cmake_uninstall.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\docs\Doxyfile.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfig.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfigVersion.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfw_config.h.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\Internal\CheckSourceCompiles.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/libs/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" "-SC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW" "-BC:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build" --check-stamp-file "C:/Aadit/CodeBlocks/Cpp/Learning OPENGLNEW/build/libs/glfw/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\cmake_uninstall.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\docs\Doxyfile.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfig.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfwConfigVersion.cmake.in;C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\libs\glfw\src\glfw_config.h.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.c.in;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindOpenGL.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\FindThreads.cmake;C:\Program Files\CMake\share\cmake-3.22\Modules\Internal\CheckSourceCompiles.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\ZERO_CHECK.vcxproj">
      <Project>{E8D92651-7EAC-304D-A267-DAAB83081BFB}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\examples\boing.vcxproj">
      <Project>{7C11D99F-8BEB-39EF-9B62-254D76264A14}</Project>
      <Name>boing</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\examples\gears.vcxproj">
      <Project>{96DF35D4-A0BB-3A2A-93AE-EC373B79DB93}</Project>
      <Name>gears</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\src\glfw.vcxproj">
      <Project>{501E663A-A0E5-3B86-A185-6E4DF24AEB03}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\examples\heightmap.vcxproj">
      <Project>{73A9AE6E-66A2-3779-98E5-A4B7FD865510}</Project>
      <Name>heightmap</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\examples\simple.vcxproj">
      <Project>{5CE592C9-6AA6-358E-9762-CFBF69E4164E}</Project>
      <Name>simple</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\examples\splitview.vcxproj">
      <Project>{66725E77-004E-3E23-A44E-AA20385AF49C}</Project>
      <Name>splitview</Name>
    </ProjectReference>
    <ProjectReference Include="C:\Aadit\CodeBlocks\Cpp\Learning OPENGLNEW\build\libs\glfw\examples\wave.vcxproj">
      <Project>{ABA85083-CAD3-3617-ADAA-6A7128AEC6B8}</Project>
      <Name>wave</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>